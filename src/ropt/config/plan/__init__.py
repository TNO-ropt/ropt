"""Configuration classes for optimization plans.

Optimization plans are used to run workflows consisting of multiple steps,
typically executed sequentially. However, they may also include nested steps
that run repeatedly, such as in loops or within nested optimization processes.
These plans can store information in "plan variables," which can either be
provided as inputs when starting the plan or defined during the configuration.
Additionally, optional output variables may be specified to return values when
the plan is completed.

Each plan can define steps that execute code to access or modify plan variables
and/or generate intermediate results. These results can be broadcast via an
event mechanism. Additionally, plans may include result handlers that respond to
these events to process and finalize the results generated by the steps.

The [`Plan`][ropt.plan.Plan] class is responsible for executing optimization
plans, accepting optional input values and returning output values. The plan's
configuration is handled by the [`PlanConfig`][ropt.config.plan.PlanConfig]
class, which specifies the inputs, outputs, variables, steps, and result
handlers.
"""

from ._plan_config import PlanConfig, ResultHandlerConfig, StepConfig

__all__ = [
    "ResultHandlerConfig",
    "StepConfig",
    "PlanConfig",
]
